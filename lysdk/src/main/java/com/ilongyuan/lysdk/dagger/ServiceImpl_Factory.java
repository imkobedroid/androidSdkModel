// Generated by Dagger (https://dagger.dev).
package com.ilongyuan.lysdk.dagger;

import com.ilongyuan.lysdk.repository.DataRepository;
import com.ilongyuan.lysdk.service.impl.ServiceImpl;

import javax.inject.Provider;

import dagger.internal.Factory;

@SuppressWarnings({
        "unchecked",
        "rawtypes"
})
public final class ServiceImpl_Factory implements Factory<ServiceImpl> {
    private final Provider<DataRepository> dataRepositoryProvider;

    public ServiceImpl_Factory(Provider<DataRepository> dataRepositoryProvider) {
        this.dataRepositoryProvider = dataRepositoryProvider;
    }

    public static ServiceImpl_Factory create(Provider<DataRepository> dataRepositoryProvider) {
        return new ServiceImpl_Factory(dataRepositoryProvider);
    }

    public static ServiceImpl newInstance() {
        return new ServiceImpl();
    }

    @Override
    public ServiceImpl get() {
        ServiceImpl instance = new ServiceImpl();
        ServiceImpl_MembersInjector.injectDataRepository(instance, dataRepositoryProvider.get());
        return instance;
    }
}
